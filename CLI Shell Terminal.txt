



Потоки
 В каждом языке есть собственный способ напечатать результат на экран. С точки зрения операционной системы, которая запускает программу, все они работают абсолютно идентично.
При старте любой программы операционная система связывает с ней три так называемых потока: STDIN (Standar*d* Input), STDOUT (Standar*d* Output) и STDERR. Для языка программирования, они выглядят как файлы и взаимодействие с ними происходит как с файлами. STDOUT как раз отвечает за вывод на экран. Каждый раз, когда в программе (на любом языке) происходит печать на экран, функция печати, на самом деле, записывает с помощью функции write данные в STDOUT, а вот уже операционная система решает куда вывести результат. По умолчанию вывод происходит на экран терминала.
ЯП write STDOUT

Ответственность за взаимодействие с железом целиком и полностью лежит на плечах операционной системы, а программы могут только лишь попросить операционную систему выполнить ту или иную задачу.
 
ОС позволяет подменять эти потоки при старте системы, что открывает интересные возможности. Например, вывод любой команды, запущенной в баше, можно записать в файл вместо вывода на экран.
$ ls -la > output
Запустив эту команду, вы увидите, что на экране ничего не отобразилось, но в текущей директории появился файл output.
Это называется перенаправление потоков. Символ > означает, что нужно взять вывод из команды, указанной слева, и отправить его в файл, указанный справа. > всегда перезаписывает файл. Такое перенаправление работает с абсолютно любой командой, которая выводит результаты своей работы на экран.
Если нужно не перезаписывать, а добавлять, то используйте >>.

STDERR по умолчанию идёт на экран. Он позволяет отделить нормальный вывод программы от возникающих ошибок. Такой подход удобен при ведении логов, для реагирования и отладки. Будьте осторожны, перенаправление вывода в файл перенаправляет только STDOUT. Убедиться в этом очень просто. Если попробовать перейти в несуществующую директорию, то команда cd выдаст ошибку:

$ cd lala
-bash: cd: lala: No such file or directory
Теперь попробуем перенаправить вывод в файл output

$ cd lala > output
-bash: cd: lala: No such file or directory

Перенаправление есть, но сообщение вывелось на экран. Это произошло именно по той причине, что STDERR остался привязан к экрану, а внутри файла output — пустота. Решить эту задачу можно двумя способами. Перенаправив STDERR в STDOUT, либо отправив их оба в файл.

Перенаправление STDERR в STDOUT


$ cd lala > output 2>&1
$ cat output
-bash: cd: lala: No such file or directory
2 - в данном случае обозначает номер потока. В POSIX, за каждым потоком закреплен определенный номер, который является файловым дескриптором если быть точным: STDIN — 0, STDOUT — 1, STDERR — 2. Конструкцию 2>&1 нужно просто запомнить, она говорит о том, что поток с номером 2 отправляем в поток с номером 1

Перенаправление STDERR бывает полезно само по себе, без вывода в файл.


$ cd lala 2>&1
-bash: cd: lala: No such file or directory

Перенаправление обоих потоков в файл


$ cd lala &> output
$ cat output
-bash: cd: lala: No such file or directory

Пайплайн(Конвейер) Pipeline
